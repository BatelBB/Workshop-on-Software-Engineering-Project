{
  "$ref": "#/definitions/JsonRoot",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": {
    "Action": {
      "anyOf": [
        {
          "$ref": "#/definitions/Action_register"
        },
        {
          "$ref": "#/definitions/Action_register_admin"
        },
        {
          "$ref": "#/definitions/Action_login"
        },
        {
          "$ref": "#/definitions/Action_logout"
        },
        {
          "$ref": "#/definitions/Action_open_store"
        },
        {
          "$ref": "#/definitions/Action_add_to_cart"
        },
        {
          "$ref": "#/definitions/Action_purchase_shopping_cart"
        },
        {
          "$ref": "#/definitions/Action_close_store"
        },
        {
          "$ref": "#/definitions/Action_appoint_manager"
        },
        {
          "$ref": "#/definitions/Action_appoint_owner"
        },
        {
          "$ref": "#/definitions/Action_approve_owner"
        },
        {
          "$ref": "#/definitions/Action_add_permission"
        },
        {
          "$ref": "#/definitions/Action_purchase_with_non_immediate_policy"
        },
        {
          "$ref": "#/definitions/Action_start_auction"
        },
        {
          "$ref": "#/definitions/Action_start_lottery"
        },
        {
          "$ref": "#/definitions/Action_start_bid"
        },
        {
          "$ref": "#/definitions/Action_approve_bid"
        },
        {
          "$ref": "#/definitions/Action_add_purchase_simple_rule"
        },
        {
          "$ref": "#/definitions/Action_add_purchase_complex_rule"
        },
        {
          "$ref": "#/definitions/Action_add_basket_purchase_rule"
        },
        {
          "$ref": "#/definitions/Action_send_message"
        },
        {
          "$ref": "#/definitions/Action_add_product"
        }
      ]
    },
    "Action_add_basket_purchase_rule": {
      "additionalProperties": false,
      "description": "def add_basket_purchase_rule(self, store_name: str, min_price: float) -> Response:",
      "properties": {
        "min_price": {
          "type": "number"
        },
        "store_name": {
          "type": "string"
        },
        "tag": {
          "const": "add_basket_purchase_rule",
          "type": "string"
        }
      },
      "required": [
        "tag",
        "store_name",
        "min_price"
      ],
      "type": "object"
    },
    "Action_add_permission": {
      "additionalProperties": false,
      "description": "def add_permission(self, store: str, appointee: str, permission: Permission | str) -> Response[bool]:",
      "properties": {
        "appointee": {
          "type": "string"
        },
        "permission": {
          "enum": [
            "RetrievePurchaseHistory",
            "RetrieveStaffDetails",
            "InteractWithCustomer",
            "Add",
            "AddRule",
            "Update",
            "Remove",
            "ChangeDiscountPolicy",
            "ChangePurchasePolicy",
            "AppointManager",
            "AppointOwner",
            "OpenAuction",
            "OpenLottery",
            "StartBid",
            "ApproveBid"
          ],
          "type": "string"
        },
        "store": {
          "type": "string"
        },
        "tag": {
          "const": "add_permission",
          "type": "string"
        }
      },
      "required": [
        "tag",
        "store",
        "appointee",
        "permission"
      ],
      "type": "object"
    },
    "Action_add_product": {
      "additionalProperties": false,
      "description": "def add_product(self, store_name: str, product_name: str, category: str, price: float, quantity: int,                 keywords: list[str] = None) -> Response[bool]:",
      "properties": {
        "category": {
          "type": "string"
        },
        "keywords": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "price": {
          "type": "number"
        },
        "product_name": {
          "type": "string"
        },
        "quantity": {
          "type": "number"
        },
        "store_name": {
          "type": "string"
        },
        "tag": {
          "const": "add_product",
          "type": "string"
        }
      },
      "required": [
        "tag",
        "store_name",
        "product_name",
        "category",
        "price",
        "quantity",
        "keywords"
      ],
      "type": "object"
    },
    "Action_add_purchase_complex_rule": {
      "additionalProperties": false,
      "description": "def add_purchase_complex_rule(self, store_name: str, p1_name: str, gle1: str, amount1: int, p2_name: str, gle2: str,        amount2: int, complex_rule_type: str) -> Response:",
      "properties": {
        "amount1": {
          "type": "number"
        },
        "amount2": {
          "type": "number"
        },
        "complex_rule_type": {
          "type": "string"
        },
        "gle1": {
          "type": "string"
        },
        "gle2": {
          "type": "string"
        },
        "p1_name": {
          "type": "string"
        },
        "p2_name": {
          "type": "string"
        },
        "store_name": {
          "type": "string"
        },
        "tag": {
          "const": "add_purchase_complex_rule",
          "type": "string"
        }
      },
      "required": [
        "tag",
        "store_name",
        "p1_name",
        "gle1",
        "amount1",
        "p2_name",
        "gle2",
        "amount2",
        "complex_rule_type"
      ],
      "type": "object"
    },
    "Action_add_purchase_simple_rule": {
      "additionalProperties": false,
      "description": "def add_purchase_simple_rule(self, store_name: str, product_name: str, gle: str, amount: int) -> Response:",
      "properties": {
        "amount": {
          "type": "number"
        },
        "gle": {
          "type": "string"
        },
        "product_name": {
          "type": "string"
        },
        "store_name": {
          "type": "string"
        },
        "tag": {
          "const": "add_purchase_simple_rule",
          "type": "string"
        }
      },
      "required": [
        "tag",
        "store_name",
        "product_name",
        "gle",
        "amount"
      ],
      "type": "object"
    },
    "Action_add_to_cart": {
      "additionalProperties": false,
      "description": "def add_to_cart(self, store_name: str, product_name: str, quantity: int = 1) -> Response[bool]",
      "properties": {
        "product_name": {
          "type": "string"
        },
        "quantity": {
          "type": "number"
        },
        "store_name": {
          "type": "string"
        },
        "tag": {
          "const": "add_to_cart",
          "type": "string"
        }
      },
      "required": [
        "tag",
        "store_name",
        "product_name",
        "quantity"
      ],
      "type": "object"
    },
    "Action_appoint_manager": {
      "additionalProperties": false,
      "description": "def appoint_manager(self, appointee: str, store: str, ) -> Response[bool]",
      "properties": {
        "appointee": {
          "type": "string"
        },
        "store": {
          "type": "string"
        },
        "tag": {
          "const": "appoint_manager",
          "type": "string"
        }
      },
      "required": [
        "tag",
        "appointee",
        "store"
      ],
      "type": "object"
    },
    "Action_appoint_owner": {
      "additionalProperties": false,
      "description": "def appoint_owner(self, appointee: str, store: str) -> Response[bool]",
      "properties": {
        "appointee": {
          "type": "string"
        },
        "store": {
          "type": "string"
        },
        "tag": {
          "const": "appoint_owner",
          "type": "string"
        }
      },
      "required": [
        "tag",
        "appointee",
        "store"
      ],
      "type": "object"
    },
    "Action_approve_bid": {
      "additionalProperties": false,
      "description": "def approve_bid(self, store_name: str, product_name: str, is_approve: bool) -> Response:",
      "properties": {
        "is_approve": {
          "type": "boolean"
        },
        "product_name": {
          "type": "string"
        },
        "store_name": {
          "type": "string"
        },
        "tag": {
          "const": "approve_bid",
          "type": "string"
        }
      },
      "required": [
        "tag",
        "store_name",
        "product_name",
        "is_approve"
      ],
      "type": "object"
    },
    "Action_approve_owner": {
      "additionalProperties": false,
      "description": "def approve_owner(self, appointee: str, store: str, is_approve: bool)",
      "properties": {
        "appointee": {
          "type": "string"
        },
        "is_approve": {
          "type": "boolean"
        },
        "store": {
          "type": "string"
        },
        "tag": {
          "const": "approve_owner",
          "type": "string"
        }
      },
      "required": [
        "tag",
        "appointee",
        "store",
        "is_approve"
      ],
      "type": "object"
    },
    "Action_close_store": {
      "additionalProperties": false,
      "description": "def close_store(self, store_name: str) -> Response[bool]",
      "properties": {
        "store_name": {
          "type": "string"
        },
        "tag": {
          "const": "close_store",
          "type": "string"
        }
      },
      "required": [
        "tag",
        "store_name"
      ],
      "type": "object"
    },
    "Action_login": {
      "additionalProperties": false,
      "description": "def login(self, username: str, encrypted_password: str) -> Response[bool]",
      "properties": {
        "encrypted_password": {
          "description": "should NOT be encrypted, ignore the name",
          "type": "string"
        },
        "tag": {
          "const": "login",
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      },
      "required": [
        "tag",
        "username",
        "encrypted_password"
      ],
      "type": "object"
    },
    "Action_logout": {
      "additionalProperties": false,
      "description": "def logout(self) -> Response[bool]",
      "properties": {
        "tag": {
          "const": "logout",
          "type": "string"
        }
      },
      "required": [
        "tag"
      ],
      "type": "object"
    },
    "Action_open_store": {
      "additionalProperties": false,
      "description": "def open_store(self, store_name: str) -> Response[bool]:",
      "properties": {
        "store_name": {
          "type": "string"
        },
        "tag": {
          "const": "open_store",
          "type": "string"
        }
      },
      "required": [
        "tag",
        "store_name"
      ],
      "type": "object"
    },
    "Action_purchase_shopping_cart": {
      "additionalProperties": false,
      "description": "def purchase_shopping_cart(self, payment_method: str, payment_details: list, address: str, postal_code: str, city: str, country: str)",
      "properties": {
        "address": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "payment_details": {
          "items": {
            "type": "string"
          },
          "maxItems": 3,
          "minItems": 3,
          "type": "array"
        },
        "payment_method": {
          "type": "string"
        },
        "postal_code": {
          "type": "string"
        },
        "tag": {
          "const": "purchase_shopping_cart",
          "type": "string"
        }
      },
      "required": [
        "tag",
        "payment_method",
        "payment_details",
        "address",
        "postal_code",
        "city",
        "country"
      ],
      "type": "object"
    },
    "Action_purchase_with_non_immediate_policy": {
      "additionalProperties": false,
      "description": "def purchase_with_non_immediate_policy(self, store_name: str, product_name: str,                                           payment_method: str, payment_details: list[str], address: str,postal_code: str, how_much: float, city: str, country: str)",
      "properties": {
        "address": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "how_much": {
          "type": "number"
        },
        "payment_details": {
          "items": {
            "type": "string"
          },
          "maxItems": 3,
          "minItems": 3,
          "type": "array"
        },
        "payment_method": {
          "type": "string"
        },
        "postal_code": {
          "type": "string"
        },
        "product_name": {
          "type": "string"
        },
        "store_name": {
          "type": "string"
        },
        "tag": {
          "const": "purchase_with_non_immediate_policy",
          "type": "string"
        }
      },
      "required": [
        "tag",
        "store_name",
        "product_name",
        "payment_method",
        "payment_details",
        "address",
        "postal_code",
        "how_much",
        "city",
        "country"
      ],
      "type": "object"
    },
    "Action_register": {
      "additionalProperties": false,
      "description": "def register(self, username: str, password: str) -> Response[bool]:",
      "properties": {
        "password": {
          "type": "string"
        },
        "tag": {
          "const": "register",
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      },
      "required": [
        "tag",
        "username",
        "password"
      ],
      "type": "object"
    },
    "Action_register_admin": {
      "additionalProperties": false,
      "description": "def register_admin(self, username: str, password: str, is_admin: bool = True) -> Response[bool]:",
      "properties": {
        "is_admin": {
          "type": "boolean"
        },
        "password": {
          "type": "string"
        },
        "tag": {
          "const": "register_admin",
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      },
      "required": [
        "tag",
        "username",
        "password",
        "is_admin"
      ],
      "type": "object"
    },
    "Action_send_message": {
      "additionalProperties": false,
      "description": "def send_message(self, recipient, content):",
      "properties": {
        "content": {
          "type": "string"
        },
        "recipient": {
          "type": "string"
        },
        "tag": {
          "const": "send_message",
          "type": "string"
        }
      },
      "required": [
        "tag",
        "recipient",
        "content"
      ],
      "type": "object"
    },
    "Action_start_auction": {
      "additionalProperties": false,
      "description": "def start_auction(self, store_name: str, product_name: str, initial_price: float, duration: int) -> Response[bool]",
      "properties": {
        "duration": {
          "type": "number"
        },
        "initial_price": {
          "type": "number"
        },
        "product_name": {
          "type": "string"
        },
        "store_name": {
          "type": "string"
        },
        "tag": {
          "const": "start_auction",
          "type": "string"
        }
      },
      "required": [
        "tag",
        "store_name",
        "product_name",
        "initial_price",
        "duration"
      ],
      "type": "object"
    },
    "Action_start_bid": {
      "additionalProperties": false,
      "description": "def start_bid(self, store_name: str, product_name: str) -> Response:",
      "properties": {
        "product_name": {
          "type": "string"
        },
        "store_name": {
          "type": "string"
        },
        "tag": {
          "const": "start_bid",
          "type": "string"
        }
      },
      "required": [
        "tag",
        "store_name",
        "product_name"
      ],
      "type": "object"
    },
    "Action_start_lottery": {
      "additionalProperties": false,
      "description": "def start_lottery(self, store_name: str, product_name: str) -> Response:",
      "properties": {
        "product_name": {
          "type": "string"
        },
        "store_name": {
          "type": "string"
        },
        "tag": {
          "const": "start_lottery",
          "type": "string"
        }
      },
      "required": [
        "tag",
        "store_name",
        "product_name"
      ],
      "type": "object"
    },
    "JsonRoot": {
      "additionalProperties": false,
      "properties": {
        "$schema": {
          "const": "./schema.json",
          "type": "string"
        },
        "init": {
          "items": {
            "$ref": "#/definitions/Action"
          },
          "type": "array"
        },
        "version": {
          "description": "version of the initialization file, not of the schema.",
          "type": "string"
        }
      },
      "required": [
        "version",
        "init",
        "$schema"
      ],
      "type": "object"
    }
  }
}
